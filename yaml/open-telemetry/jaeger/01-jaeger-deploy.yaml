#@ load("@ytt:data", "data")
---
apiVersion: v1
kind: Namespace
metadata:
  creationTimestamp: null
  name: monitoring
spec: {}
status: {}
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: jaeger-jaeger
  namespace: monitoring
  labels:
    helm.sh/chart: jaeger-0.69.1
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/version: "1.42.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: all-in-one
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-jaeger-agent
  namespace: monitoring
  labels:
    helm.sh/chart: jaeger-0.69.1
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/version: "1.42.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: service-agent
spec:
  clusterIP: None
  ports:
    - name: zk-compact-trft
      port: 5775
      protocol: UDP
      targetPort: 0
    - name: config-rest
      port: 5778
      targetPort: 0
    - name: jg-compact-trft
      port: 6831
      protocol: UDP
      targetPort: 0
    - name: jg-binary-trft
      port: 6832
      protocol: UDP
      targetPort: 0
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/component: all-in-one
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-collector
  namespace: monitoring
  labels:
    helm.sh/chart: jaeger-0.69.1
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/version: "1.42.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: service-collector
spec:
  clusterIP: None
  ports:
    - name: http-zipkin
      port: 9411
      targetPort: 0
    - name: grpc-http
      port: 14250
      targetPort: 0
    - name: c-tchan-trft
      port: 14267
      targetPort: 0
    - name: http-c-binary-trft
      port: 14268
      targetPort: 0
    - name: otlp-grpc
      port: 4317
      targetPort: 0
    - name: otlp-http
      port: 4318
      targetPort: 0
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/component: all-in-one
---
apiVersion: v1
kind: Service
metadata:
  name: jaeger-jaeger-query
  namespace: monitoring
  labels:
    helm.sh/chart: jaeger-0.69.1
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/version: "1.42.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: service-query
spec:
  type: LoadBalancer
  ports:
    - name: http-query
      port: 16686
      targetPort: 16686
    - name: grpc-query
      port: 16685
      targetPort: 16685
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/component: all-in-one
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger-jaeger
  namespace: monitoring
  labels:
    helm.sh/chart: jaeger-0.69.1
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/instance: jaeger
    app.kubernetes.io/version: "1.42.0"
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: all-in-one
    prometheus.io/port: "14269"
    prometheus.io/scrape: "true"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/instance: jaeger
      app.kubernetes.io/component: all-in-one
  template:
    metadata:
      labels:
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/instance: jaeger
        app.kubernetes.io/component: all-in-one
      annotations:
        prometheus.io/port: "14269"
        prometheus.io/scrape: "true"
    spec:
      containers:
        - env:
            - name: SPAN_STORAGE_TYPE
              value: memory
            - name: COLLECTOR_ZIPKIN_HOST_PORT
              value: :9411
            - name: JAEGER_DISABLED
              value: "false"
            - name: COLLECTOR_OTLP_ENABLED
              value: "true"
          image: #@ "{}/banking-demo/jaeger:1.42.0".format(data.values.containterRegistryURL)
          imagePullPolicy: IfNotPresent
          name: jaeger
          args:
          ports:
            - containerPort: 5775
              protocol: UDP
            - containerPort: 6831
              protocol: UDP
            - containerPort: 6832
              protocol: UDP
            - containerPort: 5778
              protocol: TCP
            - containerPort: 16686
              protocol: TCP
            - containerPort: 16685
              protocol: TCP
            - containerPort: 9411
              protocol: TCP
            - containerPort: 4317
              protocol: TCP
            - containerPort: 4318
              protocol: TCP
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /
              port: 14269
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /
              port: 14269
              scheme: HTTP
            initialDelaySeconds: 1
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
      serviceAccountName: jaeger-jaeger